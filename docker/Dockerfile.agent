# Multi-stage build for Agent services
FROM python:3.11-slim as builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /build

# Copy requirements
COPY requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir --user -r requirements.txt

# Production stage
FROM python:3.11-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -r agentzero && useradd -r -g agentzero agentzero

# Set working directory
WORKDIR /app

# Copy Python packages from builder
COPY --from=builder /root/.local /home/agentzero/.local

# Copy application code
COPY --chown=agentzero:agentzero src/ ./src/
COPY --chown=agentzero:agentzero docker/agent_runner.py ./

# Create necessary directories
RUN mkdir -p /app/logs /app/memory /app/workspace && \
    chown -R agentzero:agentzero /app

# Switch to non-root user
USER agentzero

# Update PATH
ENV PATH=/home/agentzero/.local/bin:$PATH

# Environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    LOG_LEVEL=INFO

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Run the agent
CMD ["python", "-u", "agent_runner.py"]