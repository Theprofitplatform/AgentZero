# Multi-stage build for React Dashboard
FROM node:18-alpine as builder

# Set working directory
WORKDIR /build

# Copy package files
COPY dashboard/package*.json ./

# Install dependencies
RUN npm ci --only=production

# Copy application code
COPY dashboard/ ./

# Build the application
ARG VITE_API_URL=/api/v1
ARG VITE_WS_URL=/ws
ENV VITE_API_URL=$VITE_API_URL
ENV VITE_WS_URL=$VITE_WS_URL

RUN npm run build

# Production stage with nginx
FROM nginx:alpine

# Install curl for health checks
RUN apk add --no-cache curl

# Copy custom nginx configuration
COPY docker/nginx.conf /etc/nginx/nginx.conf

# Copy built application from builder
COPY --from=builder /build/dist /usr/share/nginx/html

# Create non-root user
RUN addgroup -g 1001 -S agentzero && \
    adduser -S -u 1001 -G agentzero agentzero && \
    chown -R agentzero:agentzero /usr/share/nginx/html && \
    chown -R agentzero:agentzero /var/cache/nginx && \
    chown -R agentzero:agentzero /var/log/nginx && \
    touch /var/run/nginx.pid && \
    chown -R agentzero:agentzero /var/run/nginx.pid

# Switch to non-root user
USER agentzero

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:80/health || exit 1

# Expose port
EXPOSE 80

# Run nginx
CMD ["nginx", "-g", "daemon off;"]